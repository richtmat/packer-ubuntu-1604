---
- set_fact: list_command="list"

- set_fact: list_command="--list"
  when: es_version | version_compare('2.0', '<')

- shell: "{{es_home}}/bin/plugin {{list_command}} | sed -n '1!p' | cut -d '-' -f2-{% if es_version | version_compare('2.0', '>') %} | grep -vE '{{supported_xpack_features | join('|')}}|license'{% endif %}"
  register: installed_plugins
  failed_when: "'ERROR' in installed_plugins.stdout"
  changed_when: False
  ignore_errors: yes

- name: remove-elasticsearch-plugins
  command: "{{es_home}}/bin/plugin remove {{item}} --silent"
  ignore_errors: yes
  with_items: "{{ installed_plugins.stdout_lines | default([]) }}"
  when: es_plugins_reinstall and installed_plugins.stdout_lines | length > 0 and not 'No plugin detected' in installed_plugins.stdout_lines[0]
  notify: restart-elasticsearch
  register: plugin_installed

- name: install-elasticsearch-plugins
  #debug: var=item
  become: true
  command: >
    {{es_home}}/bin/plugin install {{ item.plugin }}{% if item.version is defined and item.version != '' %}/{{ item.version }}{% endif %} {% if item.proxy_host is defined and item.proxy_host != '' and item.proxy_port is defined and item.proxy_port != ''%} -DproxyHost={{ item.proxy_host }} -DproxyPort={{ item.proxy_port }} {% elif es_proxy_host is defined and es_proxy_host != '' %} -DproxyHost={{ es_proxy_host }} -DproxyPort={{ es_proxy_port }} {% endif %} --silent
  register: plugin_installed
  failed_when: "'ERROR' in plugin_installed.stdout"
  changed_when: plugin_installed.rc == 0
  with_items: "{{ es_plugins | default([]) }}"
  when: not es_plugins is none and es_plugins_reinstall
